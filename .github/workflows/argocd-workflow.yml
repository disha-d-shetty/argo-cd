name: ARGO CD workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  argocd-setup:     #job id(used for ref in case any job/step needs it)
    name: Setting up argo-cd  #job name(optional)
    runs-on: ubuntu-latest

    #copy of your repository at the GitHub runner
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Install microk8s
        uses: balchua/microk8s-actions@v0.3.2
        with:
            channel: '1.26/stable'
            addons: '["dns", "rbac", "hostpath-storage", "registry"]'
      - name: Test MicroK8s
        id: myactions #step id
        run: |
            cat ~/.kube/config
            kubectl get no
            kubectl get pods -A -o wide
      - name: Install ArgoCD
        run: |
            kubectl create namespace argocd
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            kubectl wait pod --all --for=condition=Ready --namespace=argocd  --timeout=60s
            kubectl get pods -A -o wide 
            kubectl get svc argocd-server -n argocd
            kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
            echo "secret:"
            kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
            # kubectl port-forward svc/argocd-server -n argocd 8080:443

      - name: Install ngrok
        run: |
            snap install ngrok

      - name: Start ngrok
        run: |
            ngrok -h
            ngrok config add-authtoken 2lmIDJBVb6Mru22RsWXqdoTOGOb_5DQXMvgd8KjYd3bMzSpm8
            ngrok http 8080 
            sleep 10  # Give ngrok some time to start
            curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'
      
    #   - name: Get ngrok URL
    #     run: |
    #           sleep 10  # Wait for ngrok to initialize
    #           curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'            